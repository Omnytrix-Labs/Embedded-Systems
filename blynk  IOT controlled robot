/*

  Note: This requires ESP8266 support package:
    https://github.com/esp8266/Arduino

  Please be sure to select the right NodeMCU module
  in the Tools -> Board menu!

  For advanced settings please follow ESP examples :
   - ESP8266_Standalone_Manual_IP.ino
   - ESP8266_Standalone_SmartConfig.ino
   - ESP8266_Standalone_SSL.ino

  Change WiFi ssid, pass, and Blynk auth token to run :)
  Feel free to apply it to any other example. It's simple!
 *************************************************************/
*/

/* Comment this out to disable prints and save space */
#define BLYNK_PRINT Serial

/* Fill-in your Template ID (only if using Blynk.Cloud) */
//#define BLYNK_TEMPLATE_ID   "YourTemplateID"
#define BLYNK_TEMPLATE_ID "TMPLoYsgkrch"
#define BLYNK_DEVICE_NAME "Robot control"
#define BLYNK_AUTH_TOKEN "6DA0MhIsgllLy8YMNz5vZvfarC6idov0"

#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

#define m11 D1     //connect the l1 to the D1 pin nodemcu
#define m12 D2    //connect the l2 to the D2 pin nodemcu
#define m21 D6      //connect the l3 to the D6 pin nodemcu
#define m22 D7     //connect the l4 to the D7 pin nodemcu

// You should get Auth Token in the Blynk App.
// Go to the Project Settings (nut icon).
char auth[] = BLYNK_AUTH_TOKEN;

// Your WiFi credentials.
// Set password to "" for open networks.
char ssid[] = "Omnytrix labs";
char pass[] = "Omnytrix@123";


BLYNK_WRITE(V0)  //block of sketch assign to virtual pin 
{
  int s0 = param.asInt(); // parameter as int 
  if(s0 == HIGH)
  {    
    digitalWrite(m11,HIGH);   //forward commands
    digitalWrite(m12,LOW);    
    digitalWrite(m21,HIGH);
    digitalWrite(m22,LOW);
    delay(10);
    }  
  else
  {
    digitalWrite(m11,LOW);       //stop commands
    digitalWrite(m12,LOW);
    digitalWrite(m21,LOW);
    digitalWrite(m22,LOW);
    delay(10);
    }  
}
BLYNK_WRITE(V1)
{
  int s1 = param.asInt(); // parameter as int 
  if(s1 == HIGH)
  {    
    digitalWrite(m11,LOW);     //reverse commands
    digitalWrite(m12,HIGH);
    digitalWrite(m21,LOW);
    digitalWrite(m22,HIGH);
    delay(10);
    }  
  else
  {
    digitalWrite(m11,LOW);     //stop cdommands 
    digitalWrite(m12,LOW);
    digitalWrite(m21,LOW);
    digitalWrite(m22,LOW);
    delay(10);
    }  
}
BLYNK_WRITE(V2)
{
  int s2 = param.asInt(); // parameter as int 
  if(s2 == HIGH)
  {    
    digitalWrite(m11,LOW);    //left commands
    digitalWrite(m12,LOW);
    digitalWrite(m21,HIGH);
    digitalWrite(m22,LOW);
    delay(10);
    }  
  else
  {
    digitalWrite(m11,LOW);    //stop command 
    digitalWrite(m12,LOW);
    digitalWrite(m21,LOW);
    digitalWrite(m22,LOW);
    delay(10);
    }  
}
BLYNK_WRITE(V3)
{
  int s3 = param.asInt(); // parameter as int 
  if(s3 == HIGH)
  {    
    digitalWrite(m11,HIGH);   //right commands 
    digitalWrite(m12,LOW);
    digitalWrite(m21,LOW);
    digitalWrite(m22,LOW);
    delay(10);
    }  
  else
  {
    digitalWrite(m11,LOW);     //stop commands
    digitalWrite(m12,LOW);
    digitalWrite(m21,LOW);
    digitalWrite(m22,LOW);
    delay(10);
    }  
}


void setup()
{
  // Debug console
  Serial.begin(9600);
  pinMode(m11,OUTPUT);   //setting the pins to output mode
  pinMode(m12,OUTPUT);
  pinMode(m21,OUTPUT);
  pinMode(m22,OUTPUT);
  digitalWrite(m11, LOW);   //initial command for rest mode
  digitalWrite(m12, LOW);
  digitalWrite(m21, LOW);
  digitalWrite(m22, LOW);
  Serial.println("");
  Serial.println("Serial begin");

  Blynk.begin(auth, ssid, pass);     //blocking command is given ...the code is in rest until connected
  delay(2000);
  // You can also specify server:
  //Blynk.begin(auth, ssid, pass, "blynk-cloud.com", 80);
  //Blynk.begin(auth, ssid, pass, IPAddress(192,168,1,100), 8080);
}

void loop()
{
  Blynk.run(); //for processing incoming commands 
}
